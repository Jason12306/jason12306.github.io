import{_ as t,c as a,o as r,a2 as l}from"./chunks/framework.CnKoBJ9A.js";const h=JSON.parse('{"title":"vue2 相关","description":"","frontmatter":{},"headers":[],"relativePath":"articles/Vue/todo-vue2相关.md","filePath":"articles/Vue/todo-vue2相关.md"}'),i={name:"articles/Vue/todo-vue2相关.md"};function o(u,e,n,s,p,c){return r(),a("div",null,e[0]||(e[0]=[l('<h1 id="vue2-相关" tabindex="-1">vue2 相关 <a class="header-anchor" href="#vue2-相关" aria-label="Permalink to &quot;vue2 相关&quot;">​</a></h1><h2 id="vue2-无法拦截数组" tabindex="-1">vue2 无法拦截数组 <a class="header-anchor" href="#vue2-无法拦截数组" aria-label="Permalink to &quot;vue2 无法拦截数组&quot;">​</a></h2><p>在 Vue 2 中，如果你尝试使用 Vue 的响应式系统来“拦截”数组的变化，你可能遇到了一些问题。</p><p>为了在 Vue 2 中拦截数组的变化，你可以使用 Vue 提供的 Vue.set 方法或者使用 Vue 的响应式数组的原生方法，如 push、pop、shift、unshift、splice、sort 和 reverse。</p><p>Vue2.0 对于数据响应式的实现上是有一些局限性，比如：</p><ul><li>无法检测数组和对象的新增</li><li>无法检测通过索引改变数组的操作</li></ul><p>Object.defineProperty 是有监控数组下标变化的能力的，只是在 vue2.x 放弃了这个特性。</p><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h2><ul><li><p><a href="https://blog.csdn.net/XH_jing/article/details/120413904" target="_blank" rel="noreferrer">Vue2.0 不能监测数组和对象的变化原因以及解决方案</a></p></li><li><p><a href="https://v2.cn.vuejs.org/v2/guide/reactivity.html" target="_blank" rel="noreferrer">深入响应式原理</a></p></li><li><p><a href="https://blog.csdn.net/wytraining/article/details/114321846" target="_blank" rel="noreferrer">vue 中针对 7 个数组方法的重写</a></p></li></ul>',9)]))}const _=t(i,[["render",o]]);export{h as __pageData,_ as default};
