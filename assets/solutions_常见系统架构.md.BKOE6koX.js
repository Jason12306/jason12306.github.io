import{_ as e,c as r,o as l,a2 as t}from"./chunks/framework.CnKoBJ9A.js";const i="/assets/spring-cloud%E6%9E%B6%E6%9E%84%E5%9B%BE-1.BHdr-bCp.jpeg",o="/assets/spring-cloud%E6%9E%B6%E6%9E%84%E5%9B%BE-2.BsF4nVLQ.png",g=JSON.parse('{"title":"spring-cloud 常见架构","description":"","frontmatter":{},"headers":[],"relativePath":"solutions/常见系统架构.md","filePath":"solutions/常见系统架构.md"}'),s={name:"solutions/常见系统架构.md"};function n(p,a,c,d,u,_){return l(),r("div",null,a[0]||(a[0]=[t('<h1 id="spring-cloud-常见架构" tabindex="-1">spring-cloud 常见架构 <a class="header-anchor" href="#spring-cloud-常见架构" aria-label="Permalink to &quot;spring-cloud 常见架构&quot;">​</a></h1><h2 id="一、api-网关" tabindex="-1">一、API 网关 <a class="header-anchor" href="#一、api-网关" aria-label="Permalink to &quot;一、API 网关&quot;">​</a></h2><p>API 网关可以看做系统与外界联通的入口，我们可以在网关进行处理一些非业务逻辑的逻辑，比如权限验证，监控，缓存，请求路由等等。</p><ul><li><p>请求路由 在我们的系统中由于同一个接口新老两套系统都在使用，我们需要根据请求上下文将请求路由到对应的接口。</p></li><li><p>统一鉴权 对于鉴权操作不涉及到业务逻辑，那么可以在网关层进行处理，不用下层到业务逻辑。</p></li><li><p>统一监控 由于网关是外部服务的入口，所以我们可以在这里监控我们想要的数据，比如入参出参，链路时间。</p></li><li><p>流量控制，熔断降级 对于流量控制，熔断降级非业务逻辑可以统一放到网关层。</p></li><li><p>负载均衡</p></li><li><p>过滤器 filter<br> PRE：这种过滤器在请求被路由之前调用。我们可利用这种过滤器实现身份验证、在集群中选择请求的微服务、记录调试信息等。<br> POST：这种过滤器在路由到微服务以后执行。这种过滤器可用来为响应添加标准的 HTTP Header、收集统计信息和指标、将响应从微服务发送给客户端等。</p></li></ul><h2 id="二、注册中心" tabindex="-1">二、注册中心 <a class="header-anchor" href="#二、注册中心" aria-label="Permalink to &quot;二、注册中心&quot;">​</a></h2><p>nacos 注册中心实现服务发现，使得网关能够从注册中心自动获取 uri，并实现负载均衡</p><h2 id="常见架构" tabindex="-1">常见架构 <a class="header-anchor" href="#常见架构" aria-label="Permalink to &quot;常见架构&quot;">​</a></h2><p><img src="'+i+'" alt="spring-cloud架构图-1"><img src="'+o+'" alt="spring-cloud架构图-2"></p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://blog.csdn.net/a745233700/article/details/122917167" target="_blank" rel="noreferrer">Spring Cloud Gateway 服务网关的部署与使用详细介绍 </a></li><li><a href="https://cloud.tencent.com/developer/article/2168890" target="_blank" rel="noreferrer">SpringCloud 史上最详细微服务架构+系统架构的演变</a></li></ul>',10)]))}const m=e(s,[["render",n]]);export{g as __pageData,m as default};
